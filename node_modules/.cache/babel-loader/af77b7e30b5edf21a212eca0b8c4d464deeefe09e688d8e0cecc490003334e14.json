{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\reactfileupload\\\\uploadpage\\\\src\\\\Homepagefire.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { storage } from \"./firebase-config\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport Tesseract, { createWorker } from 'tesseract.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Homepagefire() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [imageUpload, setImageUpload] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [stringValue, setStringValue] = useState('');\n  const image = new Image();\n  var imageRef = \"\";\n  const uploadImage = () => {\n    if (imageUpload == null) return;\n    imageRef = ref(storage, `images/${imageUpload.name}`);\n    uploadBytes(imageRef, imageUpload).then(snapshot => {\n      alert(\"Image uploaded Successfully\");\n      getDownloadURL(snapshot.ref).then(url => {\n        setImageUrl(url);\n      });\n    });\n  };\n  const imageToText = () => {\n    _s();\n    const worker = createWorker({\n      logger: m => console.log(m)\n    });\n    const doOCR = async () => {\n      await worker.load();\n      await worker.loadLanguage('eng');\n      await worker.initialize('eng');\n      const {\n        data: {\n          text\n        }\n      } = await worker.recognize(imageUrl);\n      setStringValue(text);\n    };\n    useEffect(() => {\n      doOCR();\n    });\n  };\n  _s(imageToText, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const onFileChange = event => {\n    setImageUpload(event.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadImage,\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"uploaded image\",\n      width: \"500\",\n      height: \"500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: imageToText,\n      children: \"Generate text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: stringValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s2(Homepagefire, \"rtjdlcTLpK4yxy0oSAvh4O9dcz0=\");\n_c = Homepagefire;\nexport default Homepagefire;\nvar _c;\n$RefreshReg$(_c, \"Homepagefire\");","map":{"version":3,"names":["useState","useEffect","storage","ref","uploadBytes","getDownloadURL","Tesseract","createWorker","Homepagefire","imageUpload","setImageUpload","imageUrl","setImageUrl","stringValue","setStringValue","image","Image","imageRef","uploadImage","name","then","snapshot","alert","url","imageToText","worker","logger","m","console","log","doOCR","load","loadLanguage","initialize","data","text","recognize","onFileChange","event","target","files"],"sources":["C:/Users/DELL/OneDrive/Desktop/reactfileupload/uploadpage/src/Homepagefire.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\r\nimport {storage} from \"./firebase-config\"\r\nimport { ref,uploadBytes,getDownloadURL} from \"firebase/storage\";\r\nimport Tesseract,{createWorker} from 'tesseract.js';\r\n\r\n\r\n\r\nfunction Homepagefire() {\r\n    const[imageUpload,setImageUpload]=useState(null);\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [stringValue, setStringValue] = useState('');\r\n    const image=new Image();\r\n\r\n\r\n    var imageRef=\"\";\r\n    const uploadImage=()=>{\r\n        if(imageUpload==null) \r\n            return; \r\n        imageRef=ref(storage, `images/${imageUpload.name}`);\r\n        uploadBytes(imageRef,imageUpload).then((snapshot)=>{\r\n            alert(\"Image uploaded Successfully\");\r\n            getDownloadURL(snapshot.ref).then((url) => {\r\n                setImageUrl(url);\r\n                \r\n              });\r\n        });    \r\n    };\r\n\r\n\r\n    const imageToText=()=>{\r\n\r\n        const worker = createWorker({\r\n            logger: m => console.log(m),\r\n          });\r\n\r\n          const doOCR = async () => {\r\n            await worker.load();\r\n            await worker.loadLanguage('eng');\r\n            await worker.initialize('eng');\r\n            const { data: { text } } = await worker.recognize(imageUrl);\r\n            setStringValue(text);\r\n          };\r\n\r\n          useEffect(() => {\r\n            doOCR();\r\n          });\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n    const onFileChange = (event) => {\r\n        setImageUpload(event.target.files[0]);\r\n      };\r\n\r\n    return(\r\n        <div className=\"App\">\r\n            <input type=\"file\" onChange={onFileChange} />\r\n            <button onClick={uploadImage}>Upload Image</button> \r\n            <img src={imageUrl} alt=\"uploaded image\" width=\"500\" height=\"500\"/>\r\n            <button onClick={imageToText}>Generate text</button>\r\n            <h5>{stringValue}</h5>\r\n            \r\n                      \r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Homepagefire;"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,SAAQC,OAAO,QAAO,mBAAmB;AACzC,SAASC,GAAG,EAACC,WAAW,EAACC,cAAc,QAAO,kBAAkB;AAChE,OAAOC,SAAS,IAAEC,YAAY,QAAO,cAAc;AAAC;AAIpD,SAASC,YAAY,GAAG;EAAA;EAAA;EACpB,MAAK,CAACC,WAAW,EAACC,cAAc,CAAC,GAACV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMe,KAAK,GAAC,IAAIC,KAAK,EAAE;EAGvB,IAAIC,QAAQ,GAAC,EAAE;EACf,MAAMC,WAAW,GAAC,MAAI;IAClB,IAAGT,WAAW,IAAE,IAAI,EAChB;IACJQ,QAAQ,GAACd,GAAG,CAACD,OAAO,EAAG,UAASO,WAAW,CAACU,IAAK,EAAC,CAAC;IACnDf,WAAW,CAACa,QAAQ,EAACR,WAAW,CAAC,CAACW,IAAI,CAAEC,QAAQ,IAAG;MAC/CC,KAAK,CAAC,6BAA6B,CAAC;MACpCjB,cAAc,CAACgB,QAAQ,CAAClB,GAAG,CAAC,CAACiB,IAAI,CAAEG,GAAG,IAAK;QACvCX,WAAW,CAACW,GAAG,CAAC;MAElB,CAAC,CAAC;IACR,CAAC,CAAC;EACN,CAAC;EAGD,MAAMC,WAAW,GAAC,MAAI;IAAA;IAElB,MAAMC,MAAM,GAAGlB,YAAY,CAAC;MACxBmB,MAAM,EAAEC,CAAC,IAAIC,OAAO,CAACC,GAAG,CAACF,CAAC;IAC5B,CAAC,CAAC;IAEF,MAAMG,KAAK,GAAG,YAAY;MACxB,MAAML,MAAM,CAACM,IAAI,EAAE;MACnB,MAAMN,MAAM,CAACO,YAAY,CAAC,KAAK,CAAC;MAChC,MAAMP,MAAM,CAACQ,UAAU,CAAC,KAAK,CAAC;MAC9B,MAAM;QAAEC,IAAI,EAAE;UAAEC;QAAK;MAAE,CAAC,GAAG,MAAMV,MAAM,CAACW,SAAS,CAACzB,QAAQ,CAAC;MAC3DG,cAAc,CAACqB,IAAI,CAAC;IACtB,CAAC;IAEDlC,SAAS,CAAC,MAAM;MACd6B,KAAK,EAAE;IACT,CAAC,CAAC;EAER,CAAC;EAAA,GAlBKN,WAAW;EAuBjB,MAAMa,YAAY,GAAIC,KAAK,IAAK;IAC5B5B,cAAc,CAAC4B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC;EAEH,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAEH;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7C;MAAQ,OAAO,EAAEnB,WAAY;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS,eACnD;MAAK,GAAG,EAAEP,QAAS;MAAC,GAAG,EAAC,gBAAgB;MAAC,KAAK,EAAC,KAAK;MAAC,MAAM,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eACnE;MAAQ,OAAO,EAAEa,WAAY;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS,eACpD;MAAA,UAAKX;IAAW;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QAGpB;AAEd;AAAC,IA5DQL,YAAY;AAAA,KAAZA,YAAY;AA8DrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}